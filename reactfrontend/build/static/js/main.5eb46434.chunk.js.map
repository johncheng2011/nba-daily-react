{"version":3,"sources":["components/Player.js","components/Players.js","components/Header.js","components/TypeRadio.js","components/RandomPlayerTable.js","components/TodaysGameCard.js","components/pages/Home.js","components/PerGameTable.js","components/pages/PlayersPerGame.js","components/ZScoresTable.js","components/pages/PlayersZScores.js","components/pages/AllPerGame.js","components/pages/AllZscores.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["Player","add","e","console","log","props","player","ast","type","onClick","this","bind","playerid","Component","navBarItems","value","to","icon","LinkComponent","withRouter","NavLink","useExact","SiteWrapper","state","notificationsObjects","unread","avatarURL","message","time","Wrapper","headerProps","href","alt","imageURL","navItems","Item","className","style","paddingLeft","navProps","itemsObjects","routerContextComponentType","RouterContextProvider","children","React","RandomPlayerTable","playerPerGame","playerZScores","cards","axios","get","then","res","setState","data","perGame","zScore","res2","Fragment","backgroundColor","borderRadius","textAlign","playername","teamabbr","gp","fg_pct","ft_pct","fg3m","treb","stl","blk","pts","tov","fgz","ftz","fg3z","rebz","astz","stlz","blkz","ptsz","tovz","total","map","chart","i","Col","key","md","xl","title","Body","axis","legend","show","padding","bottom","top","colors","data1","TodaysGameCard","games","Header","game","paddingBottom","matchup","Home","date","Date","setStartDate","event","target","MyDate","getFullYear","getMonth","slice","getDate","paddingTop","selected","onChange","name","setType","getTypeURL","getDateURL","margin","pill","color","PerGameTable","sorted","counter","stuff","bolden","column","fontWeight","fontSize","cursor","clickHeader","header","sort","players","min","fouls","PlayersPerGame","attr","a","b","x","y","url","match","params","ZScoresTable","PlayersZScores","About","App","id","exact","path","component","render","AllPerGame","AllZscores","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5eb46434.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\n\r\nexport class Player extends Component {\r\n    add = (e) =>{\r\n        console.log(this.props.player.ast)\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        //console.log(this.props)\r\n        return (\r\n            <div>\r\n                <input type='button' onClick={this.props.add.bind(this,this.props.player.playerid)}/>\r\n                {this.props.player.ast}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Player\r\n","import React, {Component} from 'react';\r\nimport Player from './Player';\r\n\r\n\r\nclass Players extends Component {\r\n    state = {  }\r\n    \r\n    render() { \r\n        return this.props.players.map((player) =>(  \r\n          <Player key={player.playerid} player ={player} add={this.props.add} />   \r\n\r\n        ));\r\n    }\r\n}\r\n \r\nexport default Players;","import * as React from \"react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport \"tabler-react/dist/Tabler.css\";\r\nimport {\r\n  Site,\r\n  Nav,\r\n  Grid,\r\n  List,\r\n  Button,\r\n  RouterContextProvider,\r\n} from \"tabler-react\";\r\n\r\nimport type { NotificationProps } from \"tabler-react\";\r\n\r\ntype Props = {|\r\n  +children: React.Node,\r\n|};\r\n\r\ntype State = {|\r\n  notificationsObjects: Array<NotificationProps>,\r\n|};\r\n\r\ntype subNavItem = {|\r\n  +value: string,\r\n  +to?: string,\r\n  +icon?: string,\r\n  +LinkComponent?: React.ElementType,\r\n  +useExact?: boolean,\r\n|};\r\n\r\ntype navItem = {|\r\n  +value: string,\r\n  +to?: string,\r\n  +icon?: string,\r\n  +active?: boolean,\r\n  +LinkComponent?: React.ElementType,\r\n  +subItems?: Array<subNavItem>,\r\n  +useExact?: boolean,\r\n|};\r\n\r\nconst navBarItems: Array<navItem> = [\r\n  {\r\n    value: \"Home\",\r\n    to: \"/\",\r\n    icon: \"home\",\r\n    LinkComponent: withRouter(NavLink),\r\n    useExact: true,\r\n  },\r\n  // {\r\n  //   value: \"Today's Games\",\r\n  //   icon: \"box\",\r\n  //   to:\"/about\",\r\n  //   LinkComponent: withRouter(NavLink),\r\n  //   useExact: true,\r\n  // },\r\n  {\r\n    value: \"All Player's Stats\",\r\n    icon: \"\",\r\n    to:\"/all_players_pergame\",\r\n    LinkComponent: withRouter(NavLink),\r\n    useExact:true,\r\n    // subItems: [\r\n    //   { value: \"Per Game\", to: \"/maps\", LinkComponent: withRouter(NavLink) },\r\n    //   { value: \"Zscores\", to: \"/icons\", LinkComponent: withRouter(NavLink) },\r\n    // ],\r\n  },\r\n  {\r\n    value: \"All Player's ZScores\",\r\n    icon: \"\",\r\n    to:\"/all_players_zscores\",\r\n    LinkComponent: withRouter(NavLink),\r\n    useExact: true,\r\n  },\r\n  // {\r\n  //   value: \"Teams\",\r\n  //   to: \"/form-elements\",\r\n  //   icon: \"check-square\",\r\n  //   LinkComponent: withRouter(NavLink),\r\n  //   useExact: true,\r\n  // },\r\n  // {\r\n  //   value: \"Gallery\",\r\n  //   to: \"/gallery\",\r\n  //   icon: \"image\",\r\n  //   LinkComponent: withRouter(NavLink),\r\n  // },\r\n  // {\r\n  //   icon: \"file-text\",\r\n  //   value: \"Documentation\",\r\n  //   to:\r\n  //     process.env.NODE_ENV === \"production\"\r\n  //       ? \"https://tabler.github.io/tabler-react/documentation\"\r\n  //       : \"/documentation\",\r\n  // },\r\n];\r\n\r\nconst accountDropdownProps = {\r\n  avatarURL: \"./demo/faces/female/25.jpg\",\r\n  name: \"Jane Pearson\",\r\n  description: \"Administrator\",\r\n  options: [\r\n    { icon: \"user\", value: \"Profile\" },\r\n    { icon: \"settings\", value: \"Settings\" },\r\n    { icon: \"mail\", value: \"Inbox\", badge: \"6\" },\r\n    { icon: \"send\", value: \"Message\" },\r\n    { isDivider: true },\r\n    { icon: \"help-circle\", value: \"Need help?\" },\r\n    { icon: \"log-out\", value: \"Sign out\" },\r\n  ],\r\n};\r\n\r\nclass SiteWrapper extends React.Component<Props, State> {\r\n  state = {\r\n    notificationsObjects: [\r\n      {\r\n        unread: true,\r\n        avatarURL: \"demo/faces/male/41.jpg\",\r\n        message: (\r\n          <React.Fragment>\r\n            <strong>Nathan</strong> pushed new commit: Fix page load performance\r\n            issue.\r\n          </React.Fragment>\r\n        ),\r\n        time: \"10 minutes ago\",\r\n      },\r\n      {\r\n        unread: true,\r\n        avatarURL: \"demo/faces/female/1.jpg\",\r\n        message: (\r\n          <React.Fragment>\r\n            <strong>Alice</strong> started new task: Tabler UI design.\r\n          </React.Fragment>\r\n        ),\r\n        time: \"1 hour ago\",\r\n      },\r\n      {\r\n        unread: false,\r\n        avatarURL: \"demo/faces/female/18.jpg\",\r\n        message: (\r\n          <React.Fragment>\r\n            <strong>Rose</strong> deployed new version of NodeJS REST Api // V3\r\n          </React.Fragment>\r\n        ),\r\n        time: \"2 hours ago\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  render(): React.Node {\r\n\r\n    return (\r\n      <Site.Wrapper\r\n        headerProps={{\r\n          href: \"/\",\r\n          alt: \"NBA Daily\",\r\n          imageURL: \"http://test-nba.herokuapp.com/logo192.png\",\r\n          navItems: (\r\n            <Nav.Item type=\"div\" className=\"d-none d-md-flex\" style = {{paddingLeft:100}}>\r\n              {/* <Button\r\n                href=\"https://github.com/tabler/tabler-react\"\r\n                target=\"_blank\"\r\n                outline\r\n                size=\"sm\"\r\n                RootComponent=\"a\"\r\n                color=\"primary\"\r\n                \r\n              > */}\r\n                NBA Daily\r\n              {/* </Button> */}\r\n            </Nav.Item>\r\n          ),\r\n\r\n        }}\r\n        navProps={{ itemsObjects: navBarItems }}\r\n        routerContextComponentType={withRouter(RouterContextProvider)}\r\n        // footerProps={{\r\n        //   links: [\r\n        //     <a href=\"#\">First Link</a>,\r\n        //     <a href=\"#\">Second Link</a>,\r\n        //     <a href=\"#\">Third Link</a>,\r\n        //     <a href=\"#\">Fourth Link</a>,\r\n        //     <a href=\"#\">Five Link</a>,\r\n        //     <a href=\"#\">Sixth Link</a>,\r\n        //     <a href=\"#\">Seventh Link</a>,\r\n        //     <a href=\"#\">Eigth Link</a>,\r\n        //   ],\r\n        //   note:\r\n        //     \"Premium and Open Source dashboard template with responsive and high quality UI. For Free!\",\r\n        //   copyright: (\r\n        //     <React.Fragment>\r\n        //       Copyright © 2019\r\n        //       <a href=\".\"> Tabler-react</a>. Theme by\r\n        //       <a\r\n        //         href=\"https://codecalm.net\"\r\n        //         target=\"_blank\"\r\n        //         rel=\"noopener noreferrer\"\r\n        //       >\r\n        //         {\" \"}\r\n        //         codecalm.net\r\n        //       </a>{\" \"}\r\n        //       All rights reserved.\r\n        //     </React.Fragment>\r\n        //   ),\r\n        //   nav: (\r\n        //     <React.Fragment>\r\n        //       <Grid.Col auto={true}>\r\n        //         <List className=\"list-inline list-inline-dots mb-0\">\r\n        //           <List.Item className=\"list-inline-item\">\r\n        //             <a href=\"./docs/index.html\">Documentation</a>\r\n        //           </List.Item>\r\n        //           <List.Item className=\"list-inline-item\">\r\n        //             <a href=\"./faq.html\">FAQ</a>\r\n        //           </List.Item>\r\n        //         </List>\r\n        //       </Grid.Col>\r\n        //       <Grid.Col auto={true}>\r\n        //         <Button\r\n        //           href=\"https://github.com/tabler/tabler-react\"\r\n        //           size=\"sm\"\r\n        //           outline\r\n        //           color=\"primary\"\r\n        //           RootComponent=\"a\"\r\n        //         >\r\n        //           Source code\r\n        //         </Button>\r\n        //       </Grid.Col>\r\n        //     </React.Fragment>\r\n        //   ),\r\n        // }}\r\n      >\r\n        {this.props.children}\r\n        \r\n      </Site.Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SiteWrapper;","import React, { Component } from 'react'\r\n\r\nexport class TypeRadio extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div onChange={this.props.setType.bind(this)}>\r\n                <input type=\"radio\" value=\"PerGame\" name=\"type\" /> Per Game{' '}\r\n                <input type=\"radio\" value=\"ZScores\" name=\"type\"/> Z Scores\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TypeRadio\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport {Card,colors, Grid} from 'tabler-react';\r\nimport C3Chart from 'react-c3js';\r\nimport '../c3.css'\r\nexport class RandomPlayerTable extends Component {\r\n    state = {\r\n        playerPerGame:[],\r\n        playerZScores:[],\r\n        cards: [],\r\n    }\r\n    componentDidMount() {\r\n        // var url = 'http://localhost:5000/_rand_player' \r\n        var   url = '/_rand_player'\r\n        axios.get(url)\r\n        .then(res => (\r\n            this.setState({playerPerGame: res.data.perGame, playerZScores: res.data.zScore})\r\n            ,axios.get('/test/'+res.data.perGame.playerid)\r\n            // ,axios.get('http://localhost:5000/test/'+res.data.perGame.playerid)\r\n            .then(res2 => (this.setState({cards:res2.data})))\r\n        ))\r\n        \r\n        }\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {/* <h1>Random</h1> */}\r\n                <div style = {{backgroundColor:'rgb(49, 245, 245,.2)',borderRadius:20,textAlign:'center'}}>\r\n                  \r\n                    <h1>{this.state.playerPerGame.playername}</h1>\r\n                    <h2>Team: {this.state.playerPerGame.teamabbr}</h2>\r\n                    <h2>Games Played: {this.state.playerPerGame.gp}</h2>\r\n                </div>\r\n                <table className = \"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>Field Goal Percentage</th>\r\n                            <th>Free Throw Percentage</th>\r\n                            <th>3 Pointers Made</th>\r\n                            <th>Rebounds</th>\r\n                            <th>Assists</th>\r\n                            <th>Steals</th>\r\n                            <th>Blocks</th>\r\n                            <th>Points</th>\r\n                            <th>Turnovers</th>\r\n                            <th>Total</th>\r\n                        </tr>\r\n                    </thead>\r\n                        <tr>\r\n                            <td>Per Game Stats</td>\r\n                            <td>{this.state.playerPerGame.fg_pct}</td>\r\n                            <td>{this.state.playerPerGame.ft_pct}</td>\r\n                            <td>{this.state.playerPerGame.fg3m}</td>\r\n                            <td>{this.state.playerPerGame.treb}</td>\r\n                            <td>{this.state.playerPerGame.ast}</td>\r\n                            <td>{this.state.playerPerGame.stl}</td>\r\n                            <td>{this.state.playerPerGame.blk}</td>\r\n                            <td>{this.state.playerPerGame.pts}</td>\r\n                            <td>{this.state.playerPerGame.tov}</td>\r\n\r\n\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Z Scores</td>\r\n                            <td>{this.state.playerZScores.fgz}</td>\r\n                            <td>{this.state.playerZScores.ftz}</td>\r\n                            <td>{this.state.playerZScores.fg3z}</td>\r\n                            <td>{this.state.playerZScores.rebz}</td>\r\n                            <td>{this.state.playerZScores.astz}</td>\r\n                            <td>{this.state.playerZScores.stlz}</td>\r\n                            <td>{this.state.playerZScores.blkz}</td>\r\n                            <td>{this.state.playerZScores.ptsz}</td>\r\n                            <td>{this.state.playerZScores.tovz}</td>\r\n                            <td>{this.state.playerZScores.total}</td>\r\n                        </tr>\r\n                    <tbody>\r\n                        \r\n                    </tbody>\r\n                    \r\n                </table>\r\n                <div className = \"row\">\r\n                {this.state.cards.map((chart, i) => (\r\n            <Grid.Col key={i} md={6} xl={4}>\r\n              <Card title={chart.title}>\r\n                <Card.Body>\r\n                  <C3Chart\r\n                    data={chart.data}\r\n                    axis={chart.axis}\r\n                    legend={{\r\n                      show: true, //hide legend\r\n                    }}\r\n                    padding={{\r\n                      bottom: 0,\r\n                      top: 0,\r\n                    }}\r\n                    colors={{\r\n                      data1:'red'\r\n                    }}\r\n                  />\r\n                </Card.Body>\r\n              </Card>\r\n            </Grid.Col>\r\n          ))}\r\n          </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomPlayerTable\r\n","import React, { Component } from 'react'\r\nimport {Card} from 'tabler-react';\r\nimport axios from 'axios';\r\nexport class TodaysGameCard extends Component {\r\n    state = {\r\n        games:[],\r\n    }\r\n    componentDidMount(){\r\n        var url = 'http://localhost:5000/_today_games'\r\n        // var url = \"/_today_games\"\r\n        axios.get(url)\r\n        .then(res =>(this.setState({games:res.data})))\r\n            // this.setState({games:res})\r\n    }\r\n    render() {\r\n        console.log(this.state.games)\r\n        return (\r\n            <div className = \"col-md-5\">\r\n            <Card>\r\n                <Card.Header>\r\n                    <h4>Todays Games</h4>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <div className=\"row\">\r\n                        {this.state.games.map((game) =>(\r\n                            <div style={{paddingLeft:10, paddingBottom:10}}><h5>{game.matchup}</h5></div>\r\n                        ))}\r\n                        {/* <img style={{width:25,height:25}} src = 'http://test-nba.herokuapp.com/logo192.png'/> @ <img style={{width:25,height:25}} src = 'http://test-nba.herokuapp.com/logo192.png'/> */}\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodaysGameCard\r\n","import React, { Component, useState } from 'react'\r\nimport axios from 'axios';\r\nimport {Card,Nav,Badge,Button,Form} from 'tabler-react';\r\nimport {Link} from 'react-router-dom';\r\nimport SiteWrapper from '../Header';\r\nimport DatePicker from 'react-datepicker';\r\nimport TypeRadio from '../TypeRadio';\r\nimport RandomPlayerTable from '../RandomPlayerTable';\r\nimport TodaysGameCard from '../TodaysGameCard';\r\nimport \"tabler-react/dist/Tabler.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n// export default function Home() {\r\n//     const [startDate, setStartDate] = useState(new Date());\r\n//     const radios = [<Form.Radio label = 'asdf' />,<Form.Radio label = 'dddsd' />]\r\n//     console.log(startDate)\r\n//     return (\r\n//         <div>\r\n//             <SiteWrapper>\r\n            \r\n            //      <div className= \"row\" style = {{paddingLeft: 11, paddingTop:10}}>\r\n            //  <Card className = \"col-md-3\">\r\n            //          <Card.Header>\r\n            //              <h4>Pick A Date</h4>\r\n            //          </Card.Header>\r\n            //          <Card.Body>\r\n            //             Select a date and find out who's playing\r\n\r\n            //             <DatePicker showPopperArrow={false} selected={startDate} onChange={date => setStartDate(date)} />\r\n            //             <Form.Radio label=\"dd\"  checked/>\r\n            //             <Form.SelectGroup children = {radios}/>\r\n                        // <Button style={{margin:10}} pill color='primary'>Submit</Button>\r\n            //          </Card.Body>\r\n                    \r\n            //      </Card>\r\n//                  <Card className = \"col-md-4\">\r\n//                      <Card.Header>\r\n//                          fdsf\r\n//                      </Card.Header>\r\n                    \r\n//                  </Card>\r\n//                  </div>\r\n//              </SiteWrapper>\r\n             \r\n//                <Link to=\"/about\">about</Link>\r\n//                <Badge color=\"primary\" className=\"mr-1\">\r\n//                  primary\r\n//                </Badge>\r\n//                <h1>hello </h1>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n\r\nexport class Home extends Component {\r\n    state = {\r\n        date: new Date(),\r\n        type: 'perGame',\r\n        player: [],\r\n\r\n    };\r\n    \r\n\r\n    setStartDate = (date) =>{\r\n        this.setState({state: date})\r\n    };\r\n    setType(event) {\r\n        console.log(event.target.value)\r\n        this.setState({type:event.target.value})\r\n    };\r\n    checkPerGame(){\r\n\r\n        if(this.state.type === 'perGame'){\r\n            \r\n            return true\r\n        }\r\n    }\r\n    getDateURL(){\r\n        var MyDate = this.state.date\r\n        var MyDateString = MyDate.getFullYear() + '-' + ('0' + (MyDate.getMonth()+1)).slice(-2) + '-'\r\n             + ('0' + MyDate.getDate()).slice(-2);\r\n        // var month = '' + date.getMonth();\r\n        // var day = '' + date.getDate();\r\n        // var year = '' + date.getFullYear();\r\n        return MyDateString\r\n    }\r\n    getTypeURL(){\r\n        if(this.state.type === 'perGame'){\r\n            return 'players'\r\n        }\r\n        else{\r\n            return 'zscores'\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n            <SiteWrapper>\r\n                <div className= \"row\" style = {{paddingLeft: 11, paddingTop:10}}>\r\n            <Card className = \"col-md-3\">\r\n                    <Card.Header>\r\n                        <h4>Pick A Date</h4>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        select a date and see whos playing\r\n                        <DatePicker selected={this.state.date} onChange={date => this.setState({date:date})} />\r\n                        {/* <TypeRadio setType = {this.setType}/> */}\r\n                        <div >\r\n                            <input type=\"radio\" value=\"perGame\" name=\"type\"  onChange={this.setType.bind(this)}/> Per Game\r\n                            <input type=\"radio\" value=\"ZScores\" name=\"type\"  onChange={this.setType.bind(this)}/> Z Scores\r\n                        </div>\r\n                        <Link to={'/'+this.getTypeURL()+'/'+this.getDateURL()}>\r\n                        <Button style={{margin:10}} pill color='primary' to=\"/\">Submit</Button></Link>\r\n                    </Card.Body>\r\n                    \r\n                </Card>\r\n                <Card className = \"col-md-4\">\r\n                    <Card.Header>\r\n                        About\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        WIP\r\n                    </Card.Body>                    \r\n                </Card>\r\n                <TodaysGameCard/>\r\n                </div>\r\n                <div  style = {{paddingLeft: 11, paddingTop:10}}>\r\n                \r\n                <RandomPlayerTable />\r\n                \r\n                </div>\r\n            </SiteWrapper> \r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\r\n\r\n\r\nexport class PerGameTable extends Component {\r\n    state = {\r\n        sorted: 'pts',\r\n\r\n    }\r\n    counter = () =>{\r\n        \r\n        return this.state.counter\r\n    }\r\n    stuff = (i) =>{\r\n        var t = i % 10\r\n        if(t ===0 && i!== 0){ \r\n        return(\r\n            <tr>\r\n                <th>count</th>\r\n                <th>Player Name </th>\r\n                <th style = {this.bolden('teamabbr')}>Team</th>\r\n                <th style = {this.bolden('gp')}>GP </th>\r\n                <th style = {this.bolden('min')}>Min</th>\r\n                <th style = {this.bolden('fg_pct')}>FG%</th>\r\n                <th style = {this.bolden('fg3m')}>FG3m</th>\r\n                <th style = {this.bolden('ft_pct')}>FT%</th>\r\n                <th style = {this.bolden('treb')}>TReb</th>\r\n                <th style = {this.bolden('ast')}>Ast</th>\r\n                <th style = {this.bolden('stl')}>Stl</th>\r\n                <th style = {this.bolden('blk')}>Blk</th>\r\n                <th style = {this.bolden('pts')}>Pts</th>\r\n                <th style = {this.bolden('tov')}>Tov</th>\r\n                <th style = {this.bolden('foul')}>Foul</th>\r\n            </tr>\r\n        )}\r\n    }\r\n    bolden = (column) =>{\r\n        if(this.state.sorted === column){\r\n            return {fontWeight: \"bold\", fontSize: \"115%\",cursor:'pointer'}\r\n        }\r\n        return {cursor:'pointer'}\r\n    }\r\n    \r\n\r\n\r\n    clickHeader = (header) =>{\r\n        this.props.sort(header)\r\n        this.setState({sorted: header})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table className = 'table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>count</th>\r\n                        {/* {this.props.sort.bind(this,'playername')} */}\r\n                        {/* {this.props.sort.bind(this,'teamabbr')} */}\r\n                        <th>Player Name</th>\r\n                        <th onClick = {this.clickHeader.bind(this,'teamabbr')} style = {this.bolden('teamabbr')}>Team</th>\r\n                        <th onClick = {this.clickHeader.bind(this,'gp')} style = {this.bolden('gp')}>GP</th>\r\n                        <th onClick = {this.clickHeader.bind(this,'min')} style = {this.bolden('min')}>Min</th>\r\n                        <th onClick = {this.clickHeader.bind(this,'fg_pct')} style = {this.bolden('fg_pct')}>FG%</th>\r\n                        <th onClick = {this.clickHeader.bind(this,'fg3m')} style = {this.bolden('fg3m')}>FG3m</th>\r\n                        <th onClick = {this.clickHeader.bind(this,'ft_pct')} style = {this.bolden('ft_pct')}>FT%</th>\r\n                        <th onClick = {this.clickHeader.bind(this,'treb')} style = {this.bolden('treb')}>TReb</th>\r\n                        <th onClick = {this.clickHeader.bind(this,'ast')} style = {this.bolden('ast')}>Ast</th>\r\n                        <th onClick = {this.clickHeader.bind(this,'stl')} style = {this.bolden('stl')}>Stl</th>\r\n                        <th onClick = {this.clickHeader.bind(this,'blk')} style = {this.bolden('blk')}>Blk</th>\r\n                        <th onClick = {this.clickHeader.bind(this,'pts')} style = {this.bolden('pts')}>Pts</th>\r\n                        <th onClick = {this.clickHeader.bind(this,'tov')} style = {this.bolden('tov')}>Tov</th>\r\n                        <th onClick = {this.clickHeader.bind(this,'fouls')} style = {this.bolden('fouls')}>Foul</th>\r\n        \r\n                        \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.players.map((player,i) => (\r\n                                <React.Fragment>\r\n                                {this.stuff(i)}       \r\n                                <tr>\r\n                                    <td>{i+1}</td>\r\n                                    <td>{player.playername}</td>\r\n                                    <td>{player.teamabbr}</td>\r\n                                    <td>{player.gp}</td>\r\n                                    <td>{player.min}</td>\r\n                                    <td>{player.fg_pct}</td>\r\n                                    <td>{player.fg3m}</td>\r\n                                    <td>{player.ft_pct}</td>\r\n                                    <td>{player.treb}</td>\r\n                                    <td>{player.ast}</td>\r\n                                    <td>{player.stl}</td>\r\n                                    <td>{player.blk}</td>\r\n                                    <td>{player.pts}</td>\r\n                                    <td>{player.tov}</td>\r\n                                    <td>{player.fouls}</td>\r\n\r\n\r\n\r\n                                </tr>\r\n                                </React.Fragment>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default PerGameTable\r\n\r\n\r\n// ast: 0.8\r\n// blk: 0\r\n// dreb: 1.5\r\n// fg3_pct: 0.077\r\n// fg3a: 3.3\r\n// fg3m: 0.3\r\n// fg_pct: 0.333\r\n// fga: 4.5\r\n// fgm: 1.5\r\n// fouls: 0.5\r\n// ft_pct: 0\r\n// fta: 0\r\n// ftm: 0\r\n// gp: 4\r\n// loss: 2\r\n// min: 12.8\r\n// oreb: 0\r\n// playerid: 1713\r\n// playername: \"Vince Carter\"\r\n// pts: 3.3\r\n// stl: 0.5\r\n// teamabbr: \"ATL\"\r\n// teamid: 1610612737\r\n// tov: 0.5\r\n// treb: 1.5\r\n// win: 2","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport PerGameTable from '../PerGameTable';\r\nimport SiteWrapper from '../Header';\r\n// import Table from 'tabler-react';\r\n\r\n\r\nexport class PlayersPerGame extends Component {\r\n    \r\n    state={\r\n        players:[],\r\n    }\r\n    log = (attr)=>{\r\n        this.setState({players: this.state.players.sort(function(a,b) {\r\n            var x = a[attr];\r\n            var y = b[attr];\r\n            return ((x < y) ? 1 : ((x > y) ? -1 : 0));\r\n\r\n        }) })\r\n    }\r\n\r\n      componentDidMount() {\r\n        // var   url = 'http://localhost:5000/_players/' + this.props.match.params.date;\r\n        // var url = 'http://localhost:5000/_allPerGame'\r\n        var   url = '/_players/' + this.props.match.params.date;\r\n        axios.get(url)\r\n        // axios.get('/_allPlayerPerGame')\r\n        .then(res => this.setState({players: res.data}))\r\n        \r\n        }\r\n\r\n    \r\n\r\n    render() {\r\n        console.log(this.state.players)\r\n        return (\r\n            <SiteWrapper>\r\n            <div className = \"container\">\r\n                \r\n                {/* <table>\r\n                    <thead>\r\n                      <th onClick = {this.log}>fdf</th>  \r\n                      <th>sdd</th>\r\n                      <th>count</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.players.map((player) => (\r\n                            <tr>\r\n                                <td>{player.playername}</td>\r\n                                <td>{player.playerid}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table> */}\r\n\r\n                \r\n                <PerGameTable players = {this.state.players}  sort = {this.log}/>\r\n                \r\n            </div>\r\n            </SiteWrapper>\r\n        )\r\n    }\r\n}\r\n\r\n// this.props.players.map((player) =>(  \r\n    // <Player key={player.playerid} player ={player} add={this.props.add} />   \r\n\r\nexport default PlayersPerGame\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport class ZScoresTable extends Component {\r\n    state = {\r\n        sorted: 'total',\r\n    }\r\n\r\n    stuff = (i) =>{\r\n        var t = i % 10\r\n        if(t ===0 && i!== 0){ \r\n        return(\r\n            <tr>\r\n                <th>count</th>\r\n                <th>Player Name </th>\r\n                <th style = {this.bolden('teamabbr')}>Team</th>\r\n                <th style = {this.bolden('gp')}>GP </th>\r\n                <th style = {this.bolden('min')}>Min</th>\r\n                <th style = {this.bolden('fgz')}>FG Z</th>\r\n                <th style = {this.bolden('ftz')}>FT Z</th>\r\n                <th style = {this.bolden('fg3mz')}>FG3 Z</th>\r\n                <th style = {this.bolden('rebz')}>Reb Z</th>\r\n                <th style = {this.bolden('astz')}>Ast Z</th>\r\n                <th style = {this.bolden('stlz')}>Stl Z</th>\r\n                <th style = {this.bolden('blkz')}>Blk Z</th>\r\n                <th style = {this.bolden('ptsz')}>Pts Z</th>\r\n                <th style = {this.bolden('tovz')}>Tov Z</th>\r\n                <th style = {this.bolden('total')}>Total</th>\r\n            </tr>\r\n        )}\r\n    }\r\n    bolden = (column) =>{\r\n        if(this.state.sorted === column){\r\n            return {fontWeight: \"bold\", fontSize: \"115%\",cursor:'pointer'}\r\n        }\r\n        return {cursor:'pointer'}\r\n    }\r\n    clickHeader = (header) =>{\r\n        this.props.sort(header)\r\n        this.setState({sorted: header})\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <table className = 'table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Count</th>\r\n                        <th>Player Name</th>\r\n                        <th onClick = {this.clickHeader.bind(this,'teamabbr')} style = {this.bolden('teamabbr')}>Team</th>\r\n                        <th onClick = {this.clickHeader.bind(this,'gp')} style = {this.bolden('gp')}>GP</th>\r\n                        <th onClick = {this.clickHeader.bind(this,'min')} style = {this.bolden('min')}>Min</th>\r\n                        <th onClick = {this.clickHeader.bind(this,'fgz')} style = {this.bolden('fgz')}>FG Z</th>\r\n                        <th onClick = {this.clickHeader.bind(this,'ftz')} style = {this.bolden('ftz')}>FT Z</th>\r\n                        <th onClick = {this.clickHeader.bind(this,'fg3z')} style = {this.bolden('fg3z')}>FG3 Z</th>\r\n                        <th onClick = {this.clickHeader.bind(this,'rebz')} style = {this.bolden('rebz')}>Reb Z</th>\r\n                        <th onClick = {this.clickHeader.bind(this,'astz')} style = {this.bolden('astz')}>Ast Z</th>\r\n                        <th onClick = {this.clickHeader.bind(this,'stlz')} style = {this.bolden('stlz')}>Stl Z</th>\r\n                        <th onClick = {this.clickHeader.bind(this,'blkz')} style = {this.bolden('blkz')}>Blk Z</th>\r\n                        <th onClick = {this.clickHeader.bind(this,'ptsz')} style = {this.bolden('ptsz')}>Pts Z</th>\r\n                        <th onClick = {this.clickHeader.bind(this,'tovz')} style = {this.bolden('tovz')}>Tov Z</th>\r\n                        <th onClick = {this.clickHeader.bind(this,'total')} style = {this.bolden('total')}>Total</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.players.map((player,i) => (\r\n                        <React.Fragment>\r\n                        {this.stuff(i)}       \r\n                        <tr>\r\n                            <td>{i+1}</td>\r\n                            <td>{player.playername}</td>\r\n                            <td>{player.teamabbr}</td>\r\n                            <td>{player.gp}</td>\r\n                            <td>{player.min}</td>\r\n                            <td>{player.fgz}</td>\r\n                            <td>{player.ftz}</td>\r\n                            <td>{player.fg3z}</td>\r\n                            <td>{player.rebz}</td>\r\n                            <td>{player.astz}</td>\r\n                            <td>{player.stlz}</td>\r\n                            <td>{player.blkz}</td>\r\n                            <td>{player.ptsz}</td>\r\n                            <td>{player.tovz}</td>\r\n                            <td>{player.total}</td>\r\n\r\n\r\n\r\n                        </tr>\r\n                        </React.Fragment>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ZScoresTable\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport ZScoresTable from '../ZScoresTable';\r\nimport SiteWrapper from '../Header';\r\n\r\nexport class PlayersZScores extends Component {\r\n    state = {\r\n        players: [],\r\n    }\r\n    log = (attr)=>{\r\n        this.setState({players: this.state.players.sort(function(a,b) {\r\n            var x = a[attr];\r\n            var y = b[attr];\r\n            return ((x < y) ? 1 : ((x > y) ? -1 : 0));\r\n\r\n        }) })\r\n    }\r\n    componentDidMount() {\r\n        // var   url = 'http://localhost:5000/_zscores/' + this.props.match.params.date;\r\n        // var url = 'http://localhost:5000/_allPerGame'\r\n        var   url = '/_zscores/' + this.props.match.params.date;\r\n        axios.get(url)\r\n        // axios.get('/_allPlayerPerGame')\r\n        .then(res => this.setState({players: res.data}))\r\n        }\r\n    render() {\r\n        return (\r\n            <SiteWrapper>\r\n            <div className = \"container\">\r\n                \r\n                {/* <table>\r\n                    <thead>\r\n                      <th onClick = {this.log}>fdf</th>  \r\n                      <th>sdd</th>\r\n                      <th>count</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.players.map((player) => (\r\n                            <tr>\r\n                                <td>{player.playername}</td>\r\n                                <td>{player.playerid}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table> */}\r\n\r\n                \r\n                <ZScoresTable players = {this.state.players}  sort = {this.log}/>\r\n                \r\n            </div>\r\n            </SiteWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlayersZScores\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport PerGameTable from '../PerGameTable';\r\nimport SiteWrapper from '../Header';\r\n// import Table from 'tabler-react';\r\n\r\n\r\nexport class PlayersPerGame extends Component {\r\n    \r\n    state={\r\n        players:[],\r\n    }\r\n    log = (attr)=>{\r\n        this.setState({players: this.state.players.sort(function(a,b) {\r\n            var x = a[attr];\r\n            var y = b[attr];\r\n            return ((x < y) ? 1 : ((x > y) ? -1 : 0));\r\n\r\n        }) })\r\n    }\r\n\r\n      componentDidMount() {\r\n        // var   url = 'http://localhost:5000/_players/' + this.props.match.params.date;\r\n        // var url = 'http://localhost:5000/_allPerGame'\r\n        var   url = '/_allPerGame'\r\n        axios.get(url)\r\n        // axios.get('/_allPlayerPerGame')\r\n        .then(res => this.setState({players: res.data}))\r\n        \r\n        }\r\n\r\n    \r\n\r\n    render() {\r\n        console.log(this.state.players)\r\n        return (\r\n            <SiteWrapper>\r\n            <div className = \"container\">\r\n                \r\n                {/* <table>\r\n                    <thead>\r\n                      <th onClick = {this.log}>fdf</th>  \r\n                      <th>sdd</th>\r\n                      <th>count</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.players.map((player) => (\r\n                            <tr>\r\n                                <td>{player.playername}</td>\r\n                                <td>{player.playerid}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table> */}\r\n\r\n                \r\n                <PerGameTable players = {this.state.players}  sort = {this.log}/>\r\n                \r\n            </div>\r\n            </SiteWrapper>\r\n        )\r\n    }\r\n}\r\n\r\n// this.props.players.map((player) =>(  \r\n    // <Player key={player.playerid} player ={player} add={this.props.add} />   \r\n\r\nexport default PlayersPerGame\r\n\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport ZScoresTable from '../ZScoresTable';\r\nimport SiteWrapper from '../Header';\r\n\r\nexport class PlayersZScores extends Component {\r\n    state = {\r\n        players: [],\r\n    }\r\n    log = (attr)=>{\r\n        this.setState({players: this.state.players.sort(function(a,b) {\r\n            var x = a[attr];\r\n            var y = b[attr];\r\n            return ((x < y) ? 1 : ((x > y) ? -1 : 0));\r\n\r\n        }) })\r\n    }\r\n    componentDidMount() {\r\n        // var   url = 'http://localhost:5000/_zscores/' + this.props.match.params.date;\r\n        // var url = 'http://localhost:5000/_allZscores'\r\n        var   url = '/_allPlayerZscores'\r\n        axios.get(url)\r\n        // axios.get('/_allPlayerPerGame')\r\n        .then(res => this.setState({players: res.data}))\r\n        }\r\n    render() {\r\n        return (\r\n            <SiteWrapper>\r\n            <div className = \"container\">\r\n                \r\n                {/* <table>\r\n                    <thead>\r\n                      <th onClick = {this.log}>fdf</th>  \r\n                      <th>sdd</th>\r\n                      <th>count</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.players.map((player) => (\r\n                            <tr>\r\n                                <td>{player.playername}</td>\r\n                                <td>{player.playerid}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table> */}\r\n\r\n                \r\n                <ZScoresTable players = {this.state.players}  sort = {this.log}/>\r\n                \r\n            </div>\r\n            </SiteWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlayersZScores\r\n","import React from 'react'\r\nimport SiteWrapper from '../Header'\r\n\r\nexport default function About() {\r\n    return (\r\n        <React.Fragment>\r\n            <SiteWrapper>\r\n                <h1>About</h1>\r\n                <p>test about paragraph page</p>\r\n            </SiteWrapper>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport {BrowserRouter as Router,Route} from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\n// import './App.css';\r\nimport \"tabler-react/dist/Tabler.css\";\r\nimport Players from './components/Players';\r\nimport SiteWrapper from './components/Header';\r\nimport Home from './components/pages/Home';\r\nimport PlayersPerGame from './components/pages/PlayersPerGame';\r\nimport PlayersZScores from './components/pages/PlayersZScores';\r\nimport AllPerGame from './components/pages/AllPerGame';\r\nimport AllZscores from './components/pages/AllZscores';\r\n\r\nimport About from './components/pages/About';\r\nclass App extends React.Component{\r\n  state = {\r\n    players: []\r\n  }\r\n  \r\n  // componentDidMount() {\r\n  //   //axios.get('http://localhost:5000/_allPlayerPerGame')\r\n  //   axios.get('/_allPlayerPerGame')\r\n  //   .then(res => this.setState({players: res.data}))\r\n  //   }\r\n \r\n  \r\n  add = (id) =>{\r\n    this.setState({players: this.state.players.map(player => {\r\n      if(player.playerid === id){\r\n        player.ast += 1;\r\n      }\r\n      return player;\r\n    })})\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Router>\r\n        <div className = \"container\">\r\n          <Route exact path = \"/\" component={Home} />\r\n\r\n          <Route path = '/about' render = {props=>(\r\n            <React.Fragment>\r\n              <About />\r\n\r\n            </React.Fragment>\r\n\r\n          )}/>\r\n          <Route path = '/players/:date' component={PlayersPerGame}/>\r\n          <Route path = '/zscores/:date' component={PlayersZScores}/>\r\n          <Route path = '/all_players_pergame' component = {AllPerGame}/>\r\n          <Route path = '/all_players_zscores' component = {AllZscores}/>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n  }\r\n  export default App;\r\n//original\r\n// function App() {\r\n//   state = {\r\n//     players: []\r\n//   }\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <h1>hello this.state</h1>\r\n//     </div>\r\n//   );\r\n// }\r\n//import logo from './logo.svg';\r\n/* <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header> */","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}